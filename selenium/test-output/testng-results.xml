<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-27T10:21:13 IST" name="Suite" finished-at="2025-02-27T10:22:05 IST" duration-ms="51846">
    <groups>
      <group name="ErrorValid">
        <method signature="ErrorValidation_login.ErrorValidation_login()[pri:0, instance:Tests.ErrorValidation_login@63798ca7]" name="ErrorValidation_login" class="Tests.ErrorValidation_login"/>
      </group> <!-- ErrorValid -->
      <group name="smoke">
        <method signature="SubmitOrder.submitOrder(java.util.HashMap)[pri:0, instance:Tests.SubmitOrder@4ed5eb72]" name="submitOrder" class="Tests.SubmitOrder"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-02-27T10:21:13 IST" name="Error validation" finished-at="2025-02-27T10:21:51 IST" duration-ms="37969">
      <class name="Tests.ErrorValidation_login">
        <test-method is-config="true" signature="lanchApplication()[pri:0, instance:Tests.ErrorValidation_login@63798ca7]" started-at="2025-02-27T10:21:13 IST" name="lanchApplication" finished-at="2025-02-27T10:21:25 IST" duration-ms="11480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lanchApplication -->
        <test-method retried="true" signature="ErrorValidation_login()[pri:0, instance:Tests.ErrorValidation_login@63798ca7]" started-at="2025-02-27T10:21:25 IST" name="ErrorValidation_login" finished-at="2025-02-27T10:21:26 IST" duration-ms="923" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at Tests.ErrorValidation_login.ErrorValidation_login(ErrorValidation_login.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ErrorValidation_login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Tests.ErrorValidation_login@63798ca7]" started-at="2025-02-27T10:21:26 IST" name="tearDown" finished-at="2025-02-27T10:21:27 IST" duration-ms="907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lanchApplication()[pri:0, instance:Tests.ErrorValidation_login@63798ca7]" started-at="2025-02-27T10:21:27 IST" name="lanchApplication" finished-at="2025-02-27T10:21:30 IST" duration-ms="2903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lanchApplication -->
        <test-method signature="ErrorValidation_login()[pri:0, instance:Tests.ErrorValidation_login@63798ca7]" started-at="2025-02-27T10:21:30 IST" name="ErrorValidation_login" finished-at="2025-02-27T10:21:31 IST" duration-ms="1267" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at Tests.ErrorValidation_login.ErrorValidation_login(ErrorValidation_login.java:40)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ErrorValidation_login -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Tests.ErrorValidation_login@63798ca7]" started-at="2025-02-27T10:21:32 IST" name="tearDown" finished-at="2025-02-27T10:21:33 IST" duration-ms="1679" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lanchApplication()[pri:0, instance:Tests.ErrorValidation_login@63798ca7]" started-at="2025-02-27T10:21:33 IST" name="lanchApplication" finished-at="2025-02-27T10:21:36 IST" duration-ms="2855" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lanchApplication -->
        <test-method signature="ProductpageErrorValidation()[pri:0, instance:Tests.ErrorValidation_login@63798ca7]" started-at="2025-02-27T10:21:36 IST" name="ProductpageErrorValidation" finished-at="2025-02-27T10:21:51 IST" duration-ms="14649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductpageErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Tests.ErrorValidation_login@63798ca7]" started-at="2025-02-27T10:21:51 IST" name="tearDown" finished-at="2025-02-27T10:21:51 IST" duration-ms="382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.ErrorValidation_login -->
    </test> <!-- Error validation -->
    <test started-at="2025-02-27T10:21:13 IST" name="Submit Order" finished-at="2025-02-27T10:22:05 IST" duration-ms="51846">
      <class name="Tests.SubmitOrder">
        <test-method is-config="true" signature="lanchApplication()[pri:0, instance:Tests.SubmitOrder@4ed5eb72]" started-at="2025-02-27T10:21:13 IST" name="lanchApplication" finished-at="2025-02-27T10:21:24 IST" duration-ms="10480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lanchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:Tests.SubmitOrder@4ed5eb72]" started-at="2025-02-27T10:21:24 IST" name="submitOrder" data-provider="getData" finished-at="2025-02-27T10:21:40 IST" duration-ms="15933" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=jansi@gmail.com, productName=ZARA COAT 3, Password=*Selenium1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Tests.SubmitOrder@4ed5eb72]" started-at="2025-02-27T10:21:40 IST" name="tearDown" finished-at="2025-02-27T10:21:40 IST" duration-ms="576" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lanchApplication()[pri:0, instance:Tests.SubmitOrder@4ed5eb72]" started-at="2025-02-27T10:21:40 IST" name="lanchApplication" finished-at="2025-02-27T10:21:44 IST" duration-ms="3768" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lanchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:Tests.SubmitOrder@4ed5eb72]" started-at="2025-02-27T10:21:44 IST" name="submitOrder" data-provider="getData" finished-at="2025-02-27T10:21:59 IST" duration-ms="15078" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{email=vimala@gmail.com, productName=IPHONE 13 PRO, Password=*Selenium1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Tests.SubmitOrder@4ed5eb72]" started-at="2025-02-27T10:21:59 IST" name="tearDown" finished-at="2025-02-27T10:22:00 IST" duration-ms="831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lanchApplication()[pri:0, instance:Tests.SubmitOrder@4ed5eb72]" started-at="2025-02-27T10:22:00 IST" name="lanchApplication" finished-at="2025-02-27T10:22:04 IST" duration-ms="3526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lanchApplication -->
        <test-method signature="OrdersHistoryTest()[pri:0, instance:Tests.SubmitOrder@4ed5eb72]" started-at="2025-02-27T10:22:04 IST" name="OrdersHistoryTest" finished-at="2025-02-27T10:22:05 IST" depends-on-methods="Tests.SubmitOrder.submitOrder" duration-ms="1119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrdersHistoryTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Tests.SubmitOrder@4ed5eb72]" started-at="2025-02-27T10:22:05 IST" name="tearDown" finished-at="2025-02-27T10:22:05 IST" duration-ms="397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Tests.SubmitOrder -->
    </test> <!-- Submit Order -->
  </suite> <!-- Suite -->
</testng-results>
